plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.runtime' version '1.12.7'
}

group 'org.skullition.excelreader'
version '2.0'

repositories {
    mavenCentral()
}

javafx {
    version = "17"
    modules = ['javafx.controls', 'javafx.fxml']
}

mainClassName = 'skullition.ReadExcel'

dependencies {
    implementation 'org.jetbrains:annotations:23.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    implementation group: 'org.apache.poi', name: 'poi', version: '5.2.2'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.2'
    implementation group: 'com.itextpdf', name: 'itextpdf', version: '5.5.13.3'
    implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'

}

test {
    useJUnitPlatform()
}
runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    modules = ['java.naming', 'java.xml', 'jdk.crypto.ec',
               'java.desktop',
               'java.xml',
               'jdk.unsupported',
               'java.scripting',
               'java.security.jgss',
               'java.xml.crypto',
               'java.logging',
               'java.rmi',
               'java.sql',
               'java.naming',
               'java.compiler',
               'java.management']
}

tasks.register('uberJar', Jar) {
    manifest.from jar.manifest
    archiveClassifier = 'uber'

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

jar {
    manifest {
        attributes('Main-Class': 'skullition.ReadExcel')
    }
}
